NAME
    File::ChangeNotify - Watch for changes to files, cross-platform style

SYNOPSIS
        use File::ChangeNotify;

        my $watcher =
            File::ChangeNotify->instantiate_watcher
                ( directories => [ '/my/path', '/my/other' ],
                  filter      => qr/\.(?:pm|conf|yml)$/,
                );

        if ( my @events = $watcher->new_events() ) { ... }

        # blocking
        while ( my @events = $watcher->wait_for_events() ) { ... }

DESCRIPTION
    This module provides an API for creating a File::ChangeNotify::Watcher
    subclass that will work on your platform.

    Most of the documentation for this distro is in
    File::ChangeNotify::Watcher.

METHODS
    This class provides the following methods:

  File::ChangeNotify->instantiate_watcher(...)
    This method looks at each available subclass of
    File::ChangeNotify::Watcher and instantiates the first one it can load,
    using the arguments you provided.

    It always tries to use the File::ChangeNotify::Watcher::Default class
    last, on the assumption that any other class that is available is a
    better option.

  File::ChangeNotify->usable_classes()
    Returns a list of all the loadable File::ChangeNotify::Watcher
    subclasses.

AUTHOR
    Dave Rolsky, >autarch@urth.org<

BUGS
    Please report any bugs or feature requests to
    `bug-file-changenotify@rt.cpan.org', or through the web interface at
    http://rt.cpan.org. I will be notified, and then you'll automatically be
    notified of progress on your bug as I make changes.

COPYRIGHT & LICENSE
    Copyright 2009 Dave Rolsky, All Rights Reserved.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

